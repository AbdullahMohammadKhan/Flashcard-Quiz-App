{"version":3,"sources":["Flashcard.js","FlashcardList.js","App.js","index.js"],"names":["Flashcard","flashcard","useState","flip","setFlip","height","setHeight","frontEl","useRef","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","question","answer","options","window","addEventListener","removeEventListener","className","style","onClick","ref","map","option","key","FlashcardList","flashcards","id","App","setFlashcards","categories","setCategories","categoryEl","amountEl","decodeString","str","textArea","document","createElement","innerHTML","value","axios","get","then","res","data","trivia_categories","onSubmit","e","preventDefault","params","amount","category","results","questionItem","index","correct_answer","incorrect_answers","a","Date","now","sort","random","htmlFor","name","type","min","step","defaultValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.045ec0ab.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nexport default function Flashcard({ flashcard }) {\n  const [flip, setFlip] = useState(false);\n  const [height, setHeight] = useState(\"initial\");\n\n  const frontEl = useRef();\n  const backEl = useRef();\n\n  function setMaxHeight() {\n    const frontHeight = frontEl.current.getBoundingClientRect().height;\n    const backHeight = backEl.current.getBoundingClientRect().height;\n    setHeight(Math.max(frontHeight, backHeight, 100));\n  }\n\n  useEffect(setMaxHeight, [\n    flashcard.question,\n    flashcard.answer,\n    flashcard.options,\n  ]);\n  useEffect(() => {\n    window.addEventListener(\"resize\", setMaxHeight);\n    return () => window.removeEventListener(\"resize\", setMaxHeight);\n  }, []);\n\n  return (\n    <div\n      className={`card ${flip ? \"flip\" : \"\"}`}\n      style={{ height: height }}\n      onClick={() => setFlip(!flip)}\n    >\n      <div className=\"front\" ref={frontEl}>\n        {flashcard.question}\n        <div className=\"flashcard-options\">\n          {flashcard.options.map((option) => {\n            return (\n              <div className=\"flashcard-option\" key={option}>\n                {option}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"back\" ref={backEl}>\n        {flashcard.answer}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Flashcard from \"./Flashcard\";\n\nexport default function FlashcardList({ flashcards }) {\n  return (\n    <div className=\"card-grid\">\n      {flashcards.map((flashcard) => {\n        return <Flashcard flashcard={flashcard} key={flashcard.id} />;\n      })}\n    </div>\n  );\n}\n","//\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport FlashcardList from \"./FlashcardList\";\nimport \"./app.css\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState([]);\n  const [categories, setCategories] = useState([]);\n\n  const categoryEl = useRef();\n  const amountEl = useRef();\n\n  useEffect(() => {\n    axios.get(\"https://opentdb.com/api_category.php\").then((res) => {\n      setCategories(res.data.trivia_categories);\n    });\n  }, []);\n\n  useEffect(() => {}, []);\n\n  function decodeString(str) {\n    const textArea = document.createElement(\"textarea\");\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios\n      .get(\"https://opentdb.com/api.php\", {\n        params: {\n          amount: amountEl.current.value,\n          category: categoryEl.current.value,\n        },\n      })\n      .then((res) => {\n        setFlashcards(\n          res.data.results.map((questionItem, index) => {\n            const answer = decodeString(questionItem.correct_answer);\n            const options = [\n              ...questionItem.incorrect_answers.map((a) => decodeString(a)),\n              answer,\n            ];\n            return {\n              id: `${index}-${Date.now()}`,\n              question: decodeString(questionItem.question),\n              answer: answer,\n              options: options.sort(() => Math.random() - 0.5),\n            };\n          })\n        );\n      });\n  }\n\n  return (\n    <>\n      <form className=\"header\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"category\">Category</label>\n          <select id=\"category\" ref={categoryEl}>\n            {categories.map((category) => {\n              return (\n                <option value={category.id} key={category.id}>\n                  {category.name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Number of Questions</label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            min=\"1\"\n            step=\"1\"\n            defaultValue={10}\n            ref={amountEl}\n          />\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn\">Generate</button>\n        </div>\n      </form>\n      <div className=\"container\">\n        <FlashcardList flashcards={flashcards} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}